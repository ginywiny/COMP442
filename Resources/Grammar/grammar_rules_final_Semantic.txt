START -> PROG  . 

ADDOP -> plus  . 
ADDOP -> minus  . 
ADDOP -> or  . 

APARAMS -> EXPR REPTAPARAMS1  . 
APARAMS ->  . 

APARAMSTAIL -> comma EXPR  . 

ARITHEXPR -> TERM RIGHTRECARITHEXPR  . 

ARRAYSIZE -> opensqbr ARRAYSIZE1 .
ARRAYSIZE1 -> intnum _leaf_ closesqbr . 
ARRAYSIZE1 -> closesqbr  . 

ASSIGNOP -> assign  . 

EXPR -> ARITHEXPR  EXPR1 . 
EXPR1 ->  .
EXPR1 -> RELOP ARITHEXPR  .


FACTOR -> id FACTOR1 .
FACTOR1 -> REPTIDNEST1 FACTOR2 .
FACTOR1 -> openpar APARAMS closepar FACTOR2 .
FACTOR2 -> dot id FACTOR1 .
FACTOR2 -> .
FACTOR -> intnum  . 
FACTOR -> floatnum  . 
FACTOR -> openpar ARITHEXPR closepar  . 
FACTOR -> not FACTOR  . 
FACTOR -> SIGN FACTOR  . 


# Do we need _param_ or just _paramlist_??
FPARAMS -> id _leaf_ colon TYPE _leaf_ _epsilon_ REPTFPARAMS3 _dimlist_ _param_ REPTFPARAMS4  . 
FPARAMS ->  . 

FPARAMSTAIL -> comma id _leaf_ colon TYPE REPTFPARAMSTAIL4  . 

FUNCBODY -> opencubr REPTFUNCBODY1 closecubr  . 

FUNCDECL -> FUNCHEAD _funchead_ semi  . 

FUNCDEF -> FUNCHEAD FUNCBODY  . 

FUNCHEAD -> func id _leaf_ openpar _epsilon_ FPARAMS _paramlist_ closepar arrow RETURNTYPE _leaf_  . 

IMPLDEF -> impl id _leaf_ opencubr _epsilon_ REPTIMPLDEF3 _funclist_ _impl_ closecubr  . 

INDICE -> opensqbr ARITHEXPR closesqbr  . 

MEMBERDECL -> FUNCDECL  . 
MEMBERDECL -> VARDECL  . 

MULTOP -> mult  . 
MULTOP -> div  . 
MULTOP -> and  . 

OPTSTRUCTDECL2 -> inherits id _leaf_ REPTOPTSTRUCTDECL22  . 
OPTSTRUCTDECL2 ->  . 

PROG -> REPTPROG0  . 

RELEXPR -> ARITHEXPR RELOP ARITHEXPR  . 

RELOP -> eq  . 
RELOP -> noteq  . 
RELOP -> lt  . 
RELOP -> gt  . 
RELOP -> leq  . 
RELOP -> geq  . 

REPTAPARAMS1 -> APARAMSTAIL REPTAPARAMS1  . 
REPTAPARAMS1 ->  . 

REPTFPARAMS3 -> ARRAYSIZE REPTFPARAMS3  . 
REPTFPARAMS3 ->  . 

REPTFPARAMS4 -> FPARAMSTAIL REPTFPARAMS4  . 
REPTFPARAMS4 ->  . 

REPTFPARAMSTAIL4 -> ARRAYSIZE REPTFPARAMSTAIL4  . 
REPTFPARAMSTAIL4 ->  . 

REPTFUNCBODY1 -> VARDECLORSTAT REPTFUNCBODY1  . 
REPTFUNCBODY1 ->  . 

REPTIDNEST1 -> INDICE REPTIDNEST1  . 
REPTIDNEST1 ->  . 

REPTIMPLDEF3 -> FUNCDEF REPTIMPLDEF3  . 
REPTIMPLDEF3 ->  . 

REPTOPTSTRUCTDECL22 -> comma id _leaf_ REPTOPTSTRUCTDECL22  . 
REPTOPTSTRUCTDECL22 ->  . 

REPTPROG0 -> STRUCTORIMPLORFUNC REPTPROG0  . 
REPTPROG0 ->  . 

REPTSTATBLOCK1 -> STATEMENT REPTSTATBLOCK1  . 
REPTSTATBLOCK1 ->  . 

REPTSTRUCTDECL4 -> VISIBILITY _leaf_ MEMBERDECL REPTSTRUCTDECL4  . 
REPTSTRUCTDECL4 ->  . 

REPTVARDECL4 -> ARRAYSIZE REPTVARDECL4  . 
REPTVARDECL4 ->  . 


RETURNTYPE -> TYPE  . 
RETURNTYPE -> void  . 

RIGHTRECARITHEXPR -> ADDOP TERM RIGHTRECARITHEXPR  . 
RIGHTRECARITHEXPR -> . 


RIGHTRECTERM ->  . 
RIGHTRECTERM -> MULTOP FACTOR RIGHTRECTERM  . 

SIGN -> plus  . 
SIGN -> minus  . 



STATBLOCK -> opencubr REPTSTATBLOCK1 closecubr  . 
STATBLOCK -> STATEMENT  . 
STATBLOCK ->  . 


STATEMENT -> id STATEMENT1 .
STATEMENT1 -> REPTIDNEST1 STATEMENT3 . 
STATEMENT1 -> openpar APARAMS closepar STATEMENT2 . 
STATEMENT2 -> dot id STATEMENT1.
STATEMENT2 -> semi .
STATEMENT3 -> dot id STATEMENT1.
STATEMENT3 -> ASSIGNOP EXPR semi . 
STATEMENT -> if openpar RELEXPR closepar then STATBLOCK else STATBLOCK semi  . 
STATEMENT -> while openpar RELEXPR closepar STATBLOCK semi  . 
STATEMENT -> read openpar VARIABLE closepar semi  . 
STATEMENT -> write openpar EXPR closepar semi  . 
STATEMENT -> return openpar EXPR closepar semi  . 


#Do we need inheritslist and memberlist? 
STRUCTDECL -> struct id _leaf_ _epsilon_ OPTSTRUCTDECL2 _inheritslist_ opencubr _epsilon_ REPTSTRUCTDECL4 _memberlist_ _structdecl_ closecubr semi  . 


STRUCTORIMPLORFUNC -> STRUCTDECL  . 
STRUCTORIMPLORFUNC -> IMPLDEF  . 
STRUCTORIMPLORFUNC -> FUNCDEF  . 

TERM -> FACTOR RIGHTRECTERM  . 

TYPE -> integer  . 
TYPE -> float  . 
TYPE -> id  . 

VARDECL -> let id _leaf_ colon TYPE _leaf_ _epsilon_ REPTVARDECL4 _dimlist_ _vardecl_ semi  . 

VARDECLORSTAT -> VARDECL  . 
VARDECLORSTAT -> STATEMENT  . 


VARIABLE -> id VARIABLE1 .
VARIABLE1 -> REPTIDNEST1 VARIABLE3 .
VARIABLE1 -> openpar APARAMS closepar VARIABLE2 . 
VARIABLE2 -> dot id VARIABLE1 .
VARIABLE3 -> dot id VARIABLE1 .
VARIABLE3 ->  .


VISIBILITY -> public  . 
VISIBILITY -> private  . 

